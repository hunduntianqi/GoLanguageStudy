/*
	数值类型:
		1. 无符号整形:
			uint8:无符号8位整型(0-256)
			uint16:无符号16位整形(0-65535)
			uint32:无符号32位整形(0-4294967295)
			uint64:无符号64位整型(0-18446744073709551615)
		2. 有符号整型:
			int8:有符号8位整型(-128-127)
			int16:有符号16位整形(-32768-32767)
			int32:有符号32位整形(-2147483648-2147483647)
			int64:有符号64位整型(-9223372036854775808-9223372036854775807)
		3. 浮点数:
			float32:32位浮点型数
			float64:64位浮点数
		4. 复数:
			complex64:32位实数和虚数
			complex128:64位实数和虚数
		其他数值类型:
			1.byte: 类似于uint8
			2.rune: 类似int32
			3.int或uint: 32或64位
			4.uintptr:无符号整型, 用于存放一个指针
	字符串类型:
		string: 编码统一为 utf-8
	布尔型:
		只可以是true或false
	派生类型:
		1.指针类型(Pointer)
		2.数组类型
		3.结构化类型(struct)
		4.Channel类型(chan)
		5.函数类型(func)
		6.切片类型(slice)
		7.接口类型(interface)
		8.Mao类型(map)
	类型零值和类型别名:
		类型零值指某个变量被声明后的默认值, 一般情况下:
			值类型:默认值为0
			布尔型:默认值为false
			string:默认值为"空字符串"
		对类型设置别名:
			type 别名 数据类型
	数据类型所占存储大小:
		byte: 1个字节
		int32:4个字节
		float32:4个字节
		int64:8个字节
		字节数组: 1个元素一个字节
		int数组: 根据机器配置, 64位机器上, 一个元素8个字节, 32位机器上, 一个元素4个字节
*/

package main

import "fmt"

func main() {
	fmt.Println()
}
